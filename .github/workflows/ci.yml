name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Tests Unitaires
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript check
      run: npx tsc --noEmit

    - name: Run unit tests
      run: npm test
      env:
        NODE_ENV: test

    - name: Run snapshot storage tests
      run: npx jest tests/storage/pulsar-storage.spec.ts tests/storage/snapshot-format.spec.ts --runInBand
      env:
        NODE_ENV: test
        STORAGE_TYPE: pulsar
        SNAPSHOT_INTERVAL: 30

    - name: Run basic E2E tests (mock only)
      run: npx jest tests/e2e/simple.spec.ts --runInBand
      env:
        NODE_ENV: test

  test-with-pulsar:
    name: Tests E2E avec Pulsar RÃ©el
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run E2E tests with real Pulsar
      run: npm run test:e2e
      env:
        NODE_ENV: test
        ADDON_PULSAR_BINARY_URL: ${{ secrets.ADDON_PULSAR_BINARY_URL }}
        ADDON_PULSAR_TOKEN: ${{ secrets.ADDON_PULSAR_TOKEN }}
        ADDON_PULSAR_TENANT: ${{ secrets.ADDON_PULSAR_TENANT }}
        ADDON_PULSAR_NAMESPACE: ${{ secrets.ADDON_PULSAR_NAMESPACE }}
        PULSAR_TOPIC_PREFIX: "ci-test-"
        STORAGE_TYPE: "none"

    - name: Run E2E snapshot storage tests with real Pulsar
      run: npx jest tests/e2e/snapshot-storage.spec.ts --runInBand
      env:
        NODE_ENV: test
        ADDON_PULSAR_BINARY_URL: ${{ secrets.ADDON_PULSAR_BINARY_URL }}
        ADDON_PULSAR_TOKEN: ${{ secrets.ADDON_PULSAR_TOKEN }}
        ADDON_PULSAR_TENANT: ${{ secrets.ADDON_PULSAR_TENANT }}
        ADDON_PULSAR_NAMESPACE: ${{ secrets.ADDON_PULSAR_NAMESPACE }}
        S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
        S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
        S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
        PULSAR_TOPIC_PREFIX: "ci-snapshot-test-"
        STORAGE_TYPE: "pulsar"
        SNAPSHOT_INTERVAL: "10"

  build-demo:
    name: Build Demo
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build demo
      run: npm run build

    - name: Upload demo artifacts
      uses: actions/upload-artifact@v4
      with:
        name: demo-build
        path: demo/dist/
        retention-days: 7

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate
