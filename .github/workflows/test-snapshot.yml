name: Test Snapshot Storage

on:
  workflow_dispatch:  # Allow manual trigger for testing
  pull_request:
    paths:
      - 'src/storage/**'
      - 'tests/storage/**'
      - '.github/workflows/test-snapshot.yml'

jobs:
  test-snapshot-unit:
    name: Snapshot Storage Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run snapshot format tests
      run: npx jest tests/storage/snapshot-format.spec.ts --runInBand --verbose 2>&1 | tee snapshot-format-results.log
      env:
        NODE_ENV: test

    - name: Run PulsarStorage unit tests with mocks
      run: npx jest tests/storage/pulsar-storage.spec.ts --runInBand --verbose 2>&1 | tee pulsar-storage-unit-results.log
      env:
        NODE_ENV: test
        STORAGE_TYPE: pulsar
        SNAPSHOT_INTERVAL: 30

    - name: Upload unit test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: snapshot-unit-test-results
        path: |
          snapshot-format-results.log
          pulsar-storage-unit-results.log
        retention-days: 30

  test-snapshot-integration:
    name: Snapshot Storage Integration Tests
    runs-on: ubuntu-latest
    # Only run if we have secrets configured
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository)
    
    services:
      # Mock S3 service for testing
      minio:
        image: minio/minio:latest
        ports:
          - 9000:9000
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        options: --health-cmd "curl -f http://localhost:9000/minio/health/live" --health-interval 10s --health-timeout 5s --health-retries 5
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup MinIO client
      run: |
        wget -q https://dl.min.io/client/mc/release/linux-amd64/mc
        chmod +x mc
        ./mc alias set myminio http://localhost:9000 minioadmin minioadmin
        ./mc mb myminio/test-bucket || true
        echo "✅ MinIO bucket created"

    - name: Run S3 MinIO integration tests
      run: npx jest tests/storage/s3-minio.spec.ts --runInBand --verbose 2>&1 | tee s3-integration-results.log
      env:
        NODE_ENV: test
        CI: true
        S3_ACCESS_KEY_ID: minioadmin
        S3_SECRET_ACCESS_KEY: minioadmin
        S3_ENDPOINT: http://localhost:9000
        S3_BUCKET: test-bucket

    - name: Run snapshot storage unit tests
      run: npx jest tests/storage/pulsar-storage.spec.ts --runInBand --verbose 2>&1 | tee pulsar-storage-integration-results.log
      env:
        NODE_ENV: test
        STORAGE_TYPE: pulsar
        SNAPSHOT_INTERVAL: 10

    - name: Upload integration test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: snapshot-integration-test-results
        path: |
          s3-integration-results.log
          pulsar-storage-integration-results.log
        retention-days: 30

  validate-build:
    name: Validate TypeScript Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: TypeScript check
      run: npx tsc --noEmit

    - name: Build project
      run: npm run build

    - name: Verify snapshot exports
      run: |
        # Check that DocumentSnapshot interface is exported
        grep -q "export interface DocumentSnapshot" src/storage/pulsar-storage.ts || exit 1
        echo "✅ DocumentSnapshot interface is properly exported"